---
import { getCollection } from "astro:content";

import PageLayout from "layouts/PageLayout.astro";
import PageSection from "components/PageSection.astro";
import BlogsSearch from "components/BlogsSearch.svelte";

const blogPosts = await getCollection("blog", ({ data }) => !data?.draft);
---

<PageLayout title="vexide blogs">
	<PageSection id="blogs">
		<h1 class="title" style="align-self: center;">Blogs</h1>
		<a id="content"></a>
		<BlogsSearch
			client:load
			blogs={blogPosts
				.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
				.map((post, n) => {
					const animationDelay = `${n * 0.1 + 0.3}s`;
					return {
						url: `/blog/posts/${post.slug}/`,
						title: post.data.title,
						description: post.data.description,
						author: post.data.author,
						date: new Date(post.data.date),
						thumbnail: post.data.thumbnail?.url,
						thumbnailAlt: post.data.thumbnail?.alt,
						tag: post.data.tags[0],
						style: `animation: slide-up-blog 500ms backwards ${animationDelay};`,
					};
				})}
		/>
		<div class="blogs-grid"></div>
	</PageSection>
</PageLayout>

<style>
	@keyframes slide-up-blog {
		from {
			transform: translateY(32px);
			opacity: 0;
		}
	}
	@keyframes slide-up-regular {
		from {
			transform: translateY(8px);
			opacity: 0;
		}
	}

	#blogs {
		min-height: 100vh;
		z-index: 1;
		/* border-bottom: 1px solid #6e59ff; */
		--grid-color: hsl(var(--base-hue), 12%, 18%);
		background-size: 20px 20px;
		background-image: linear-gradient(
				to right,
				var(--grid-color) 1px,
				transparent 1px
			),
			linear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);
	}

	#blogs > :global(.page-section-inner) {
		display: flex;
		flex-direction: column;
		align-items: center;
		width: 80rem;
		gap: 30px;
		padding-block: 128px;
	}
	@media only screen and (max-width: 800px) {
		#blogs > :global(.page-section-inner) {
			width: 100%;
		}
	}
	#sim-hero::after {
	}

	.title {
		animation: slide-up-regular 500ms backwards 150ms;
	}
</style>
