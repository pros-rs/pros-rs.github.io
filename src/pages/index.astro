---
import { GITHUB_REPO_URL, CRATE_NAME, EXAMPLES } from "config";

import BaseLayout from "layouts/BaseLayout.astro";
import PageSection from "components/PageSection.astro";
import CodeExample from "components/CodeExample.astro";
import BlogCard from "components/BlogCard.svelte";

import Button from "components/Button.svelte";

const latestBlogPost = (await Astro.glob("./blog/posts/**.md")).filter(post => !post.frontmatter.draft).sort(
	(a, b) =>
		new Date(b.frontmatter.date).getTime() -
		new Date(a.frontmatter.date).getTime(),
)[0];
---

<BaseLayout>
	<main id="content">
		<PageSection id="hero">
			<div class="hero-left">
				<div class="hero-lead">
					<h1 class="title">
						Open-source Rust runtime for VEX robots.
					</h1>
					<p class="subtext">
						vexide provides a safe and efficient runtime and
						toolchain for writing VEX V5 programs in the <a
							href="https://rust-lang.com/"
							target="_blank"
							rel="noreferrer noopener"
							>Rust Programming Language</a
						>. ðŸ¦€
					</p>
				</div>
				<div class="hero-buttons">
					<Button
						variant="accent"
						href={`https://docs.rs/${CRATE_NAME}`}
						rel="noreferrer noopener"
						target="_blank"
					>
						API Documentation
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="18"
							height="18"
							viewBox="0 0 32 32"
						>
							<path
								fill="currentColor"
								d="M10 6v2h12.59L6 24.59L7.41 26L24 9.41V22h2V6z"
							></path>
						</svg>
					</Button>
					<Button
						variant="default"
						href={GITHUB_REPO_URL}
						rel="noreferrer noopener"
						target="_blank"
					>
						GitHub
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="18"
							height="18"
							viewBox="0 0 32 32"
						>
							<path
								fill="currentColor"
								d="M10 6v2h12.59L6 24.59L7.41 26L24 9.41V22h2V6z"
							></path>
						</svg>
					</Button>
				</div>
			</div>
			<div class="hero-right">
				<CodeExample
					lang="rust"
					filename="main.rs"
					code={EXAMPLES[0].code}
				/>
				<BlogCard
					url={latestBlogPost.url ?? "#"}
					title={latestBlogPost.frontmatter.title}
					description={latestBlogPost.frontmatter.description}
					author={latestBlogPost.frontmatter.author}
					date={new Date(latestBlogPost.frontmatter.date)}
					thumbnail={latestBlogPost.frontmatter.thumbnail}
					thumbnailAlt={latestBlogPost.frontmatter.thumbnail}
				/>
			</div>
		</PageSection>
	</main>
</BaseLayout>

<style>
	@keyframes slide-up {
		from {
			transform: translateY(8px);
			opacity: 0;
		}
	}

	#hero {
		z-index: 1;
		/* border-bottom: 1px solid #6e59ff; */
		--grid-color: hsl(var(--base-hue), 12%, 18%);
		background-size: 20px 20px;
		background-image: linear-gradient(
				to right,
				var(--grid-color) 1px,
				transparent 1px
			),
			linear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);
	}

	#hero::before {
		content: "";
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 50%;
		opacity: 0.05;
		background-image: linear-gradient(transparent, #223ca9, #6e59ff);
	}

	#hero > :global(.page-section-inner) {
		display: flex;
		gap: 84px;
		min-block-size: 720px;
		block-size: 90vh;
		max-block-size: 1200px;
		padding-block: 108px;
	}

	.hero-left,
	.hero-right {
		display: flex;
		flex-direction: column;
	}

	.hero-left {
		flex: 1 1 60%;
	}

	.hero-right {
		flex: 1 0 40%;
		min-inline-size: 0;
		gap: 20px;
	}

	.hero-lead {
		flex: 1 1 auto;
	}

	.hero-lead .title {
		animation: slide-up 500ms backwards 150ms;
	}

	.hero-lead .subtext {
		animation: slide-up 500ms backwards 350ms;
	}

	.hero-buttons {
		animation: slide-up 500ms backwards 450ms;
		flex: 0 0 auto;
		display: flex;
		gap: 16px;
	}

	.hero-right :global(.code-example) {
		animation: slide-up 500ms backwards 500ms;
	}

	@media only screen and (max-width: 1024px) {
		#hero > :global(.page-section-inner) {
			padding-block: 72px;
			flex-direction: column;
			max-height: unset;
			height: unset;
		}
	}
</style>
